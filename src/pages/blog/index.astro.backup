---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

import getReadingTime from 'reading-time';

const posts = await Promise.all(
	(await getCollection('blog')).map(async (post) => {
		const { body } = post;
		const readingTime = getReadingTime(body);

		return {
			...post,
			readingTime: readingTime.text
		};
	})
);

posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
	<head>
		<script is:inline>
			if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark')
			} else {
				document.documentElement.classList.remove('dark')
			}
		</script>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			body {
				padding-bottom: 6rem;
			}

			main {
				max-width: 800px;
				margin: 0 auto;
				padding: 2rem 1rem;
			}

			.blog-header {
				margin-bottom: 3rem;
			}

			.blog-title {
				font-size: 2.5rem;
				font-weight: bold;
				margin-bottom: 0.5rem;
				color: #000;
			}

			.dark .blog-title {
				color: #fff;
			}

			.blog-subtitle {
				color: #6b7280;
				font-size: 1rem;
			}

			.dark .blog-subtitle {
				color: #9ca3af;
			}

			.posts-grid {
				display: flex;
				flex-direction: column;
				gap: 2rem;
			}

			.post-card {
				position: relative;
				border-radius: 16px;
				overflow: hidden;
				transition: all 0.3s ease;
				height: 180px;
				border: 1px solid #d1d5db;
			}

			.dark .post-card {
				border-color: #4b5563;
			}

			.post-card:hover .post-image {
				filter: brightness(0.7) saturate(1.2);
				transition: filter 0.3s ease;
			}

			.post-card:hover .post-overlay {
				opacity: 0.8;
				transition: opacity 0.3s ease;
			}

			/* Cards without images */
			.post-card:not(:has(.post-image)) {
				background-color: #e6e4e0;
			}

			.dark .post-card:not(:has(.post-image)) {
				background-color: #000000;
			}

			.post-card:not(:has(.post-image)):hover {
				background-color: #c9c7c3;
				transition: background-color 0.3s ease;
			}

			.dark .post-card:not(:has(.post-image)):hover {
				background-color: #2a2a2a;
			}

			.post-card:not(:has(.post-image)) .post-overlay {
				display: none;
			}

			.post-image {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				object-fit: cover;
				z-index: 1;
			}

			.post-overlay {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background: linear-gradient(to right,
					#e6e4e0 0%,
					rgba(230, 228, 224, 0.8) 30%,
					rgba(230, 228, 224, 0.3) 50%,
					transparent 80%
				);
				z-index: 2;
			}

			.dark .post-overlay {
				background: linear-gradient(to right,
					#000000 0%,
					rgba(0, 0, 0, 0.8) 30%,
					rgba(0, 0, 0, 0.3) 50%,
					transparent 80%
				);
			}

			.post-content {
				position: absolute;
				top: 0;
				left: 0;
				width: 60%;
				height: 100%;
				display: flex;
				flex-direction: column;
				justify-content: center;
				padding: 1.5rem;
				color: #111827;
				z-index: 3;
			}

			.dark .post-content {
				color: #f9fafb;
			}

			.post-date {
				font-size: 0.875rem;
				color: #6b7280;
				margin-bottom: 0.5rem;
			}

			.dark .post-date {
				color: #9ca3af;
			}

			.post-title {
				font-size: 1.5rem;
				font-weight: 600;
				color: #111827;
				margin-bottom: 0.75rem;
				line-height: 1.3;
				text-decoration: none;
			}

			.dark .post-title {
				color: #f9fafb;
			}

			.post-description {
				color: #6b7280;
				line-height: 1.6;
				margin-bottom: 1rem;
			}

			.dark .post-description {
				color: #9ca3af;
			}

			.post-meta {
				display: flex;
				align-items: center;
				gap: 1rem;
				font-size: 0.875rem;
				color: #6b7280;
			}

			.dark .post-meta {
				color: #9ca3af;
			}

			.reading-time {
				display: flex;
				align-items: center;
				gap: 0.25rem;
			}

			.language-tag {
				display: flex;
				align-items: center;
				gap: 0.25rem;
			}

			@media (max-width: 768px) {
				.posts-grid {
					gap: 1.5rem;
				}

				.blog-title {
					font-size: 2rem;
				}

				main {
					padding: 1rem;
				}

				.post-card {
					height: 150px;
				}

				.post-content {
					padding: 1.5rem 1rem 0.75rem 1rem;
				}

				.post-title {
					font-size: 1.25rem;
				}
			}

			/* Custom fade-in-down animation */
			@keyframes fadeInDown {
				from {
					opacity: 0;
					transform: translateY(-30px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}

			.animate-fadeInDown {
				animation: fadeInDown 0.8s ease-out forwards;
				opacity: 0;
			}
		</style>
	</head>
	<body>
		<Header />
		<main class="animate-fadeInDown">
			<div class="blog-header animate-fadeInDown" style="animation-delay: 0.1s;">
				<h1 class="blog-title">Blog</h1>
				<p class="blog-subtitle">Page 1 - Showing {posts.length} of {posts.length} posts</p>
			</div>

			<div class="posts-grid animate-fadeInDown" style="animation-delay: 0.2s;">
				{
					posts.map((post) => (
						<article class="post-card">
							<a href={`/blog/${post.id}/`} style="text-decoration: none; color: inherit;">
								{post.data.heroImage && (
									<Image
										class="post-image"
										width={400}
										height={200}
										src={post.data.heroImage}
										alt={post.data.title}
									/>
								)}
								<div class="post-overlay"></div>
								<div class="post-content">
									<div class="post-date">
										<FormattedDate date={post.data.pubDate} />
									</div>
									<h2 class="post-title">{post.data.title}</h2>
									{post.data.description && (
										<p class="post-description">{post.data.description}</p>
									)}
									<div class="post-meta">
										<div class="reading-time">
											<svg width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
												<path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67V7z"/>
											</svg>
											<span>{post.readingTime}</span>
										</div>
									</div>
								</div>
							</a>
						</article>
					))
				}
			</div>
		</main>
		<Footer />
	</body>
</html>
